[{"/Users/laia/Desktop/ADALAB/3-Mo패dulo/starter-kit-React-Router y React package/src/index.js":"1","/Users/laia/Desktop/ADALAB/3-Mo패dulo/starter-kit-React-Router y React package/src/components/App.js":"2","/Users/laia/Desktop/projects-github/create-notes/src/index.js":"3","/Users/laia/Desktop/projects-github/create-notes/src/components/App.js":"4","/Users/laia/Desktop/projects-github/create-notes/src/components/Footer.js":"5","/Users/laia/Desktop/projects-github/create-notes/src/components/createYourNote/Aside.js":"6","/Users/laia/Desktop/projects-github/create-notes/src/components/createYourNote/PostedNote.js":"7","/Users/laia/Desktop/projects-github/create-notes/src/components/dashboardNotes/NoteList.js":"8","/Users/laia/Desktop/projects-github/create-notes/src/components/dashboardNotes/NoteItem.js":"9"},{"size":278,"mtime":1678909551560,"results":"10","hashOfConfig":"11"},{"size":676,"mtime":1678911239248,"results":"12","hashOfConfig":"11"},{"size":368,"mtime":1679389004758,"results":"13","hashOfConfig":"14"},{"size":3606,"mtime":1686404945179,"results":"15","hashOfConfig":"14"},{"size":971,"mtime":1685975040971,"results":"16","hashOfConfig":"14"},{"size":799,"mtime":1686330766486,"results":"17","hashOfConfig":"14"},{"size":2715,"mtime":1686406154411,"results":"18","hashOfConfig":"14"},{"size":1029,"mtime":1686334883651,"results":"19","hashOfConfig":"14"},{"size":1356,"mtime":1686405123899,"results":"20","hashOfConfig":"14"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zry9a7",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"oi37ih",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/Users/laia/Desktop/ADALAB/3-Mo패dulo/starter-kit-React-Router y React package/src/index.js",[],[],[],"/Users/laia/Desktop/ADALAB/3-Mo패dulo/starter-kit-React-Router y React package/src/components/App.js",[],[],"/Users/laia/Desktop/projects-github/create-notes/src/index.js",[],[],[],"/Users/laia/Desktop/projects-github/create-notes/src/components/App.js",["52"],[],"import { useEffect, useState } from \"react\";\nimport Aside from \"./createYourNote/Aside\";\nimport NoteList from \"./dashboardNotes/NoteList\";\nimport Footer from \"./Footer\";\nimport headerImg from \"../images/header-img.png\";\nimport \"../styles/App.scss\";\n\nfunction App() {\n  const [allNotes, setAllNotes] = useState([]);\n  const [allCategory, setAllCategory] = useState([\n    { name: \"general\", color: \"#86e1e0\" },\n    { name: \"activities\", color: \"#Fde780\" },\n    { name: \"work\", color: \"#b494c5\" },\n    { name: \"personal\", color: \"#c5ea8b\" },\n    { name: \"birthday\", color: \"#f7abc7\" },\n    { name: \"urgent\", color: \"#fbbaa4\" },\n    { name: \"ASAP\", color: \"#ee9392\" },\n  ]);\n  const [newId, setNewId] = useState(1);\n  const [newNote, setNewNote] = useState({\n    title: \"\",\n    content: \"\",\n    categoryTheme: \"general\",\n    id: 0,\n  });\n  const [noteIsEditing, setNoteIsEditing] = useState(false);\n  const [indexIsEditing, setIndexIsEditing] = useState(\"\");\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"userNotes\"));\n    if (data) {\n      setAllNotes(data.allNotes);\n      setNewId(data.newId);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"userNotes\", JSON.stringify({ allNotes, newId }));\n  });\n\n  const handleCreateNewNote = () => {\n    setAllNotes(eachNote => eachNote.concat(newNote));\n    setNewId(newId + 1);\n    resetPostedNote();\n  };\n\n  const resetPostedNote = () => {\n    setNewNote({\n      ...newNote,\n      title: \"\",\n      content: \"\",\n      categoryTheme: \"general\",\n    });\n    setNoteIsEditing(false);\n  };\n\n  const handleUpdateNote = () => {\n    setNoteIsEditing(false);\n    resetPostedNote();\n    const updatingPostingNote = allNotes;\n    updatingPostingNote[indexIsEditing].title = newNote.title;\n    updatingPostingNote[indexIsEditing].content = newNote.content;\n    updatingPostingNote[indexIsEditing].categoryTheme = newNote.categoryTheme;\n    setAllNotes(updatingPostingNote);\n  };\n\n  const handleInputNote = (name, value) => {\n    if (allNotes.length === 0) {\n      setNewId(1);\n    }\n    if (newNote.id !== newId) {\n      setNewNote({ ...newNote, id: newId, [name]: value });\n    } else {\n      setNewNote({ ...newNote, [name]: value });\n    }\n  };\n\n  const deleteAllNotes = () => {\n    setAllNotes([]);\n    setNewId(1);\n  };\n\n  const handleDeleteNote = index => {\n    setAllNotes(allNotes.filter((eachNote, i) => i !== index));\n  };\n\n  const handleEditNote = index => {\n    setNewNote(allNotes[index]);\n    setNoteIsEditing(true);\n    setIndexIsEditing(index);\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"header__div\">\n          <h1 className=\"header__div--title\">\n            What can we do today? Organize your day!\n          </h1>\n          <img\n            className=\"header__div--image\"\n            src={headerImg}\n            alt=\"Sticky notes\"\n            title=\"Sticky notes\"\n          />\n        </div>\n      </header>\n      <main className=\"main\">\n        <Aside\n          handleCreateNewNote={handleCreateNewNote}\n          newNote={newNote}\n          allCategory={allCategory}\n          noteIsEditing={noteIsEditing}\n          resetPostedNote={resetPostedNote}\n          handleUpdateNote={handleUpdateNote}\n          handleInputNote={handleInputNote}></Aside>\n        <NoteList\n          userNotes={allNotes}\n          newNote={newNote}\n          allCategory={allCategory}\n          deleteAllNotes={deleteAllNotes}\n          handleDeleteNote={handleDeleteNote}\n          handleEditNote={handleEditNote}></NoteList>\n      </main>\n      <Footer></Footer>\n    </>\n  );\n}\n\nexport default App;\n","/Users/laia/Desktop/projects-github/create-notes/src/components/Footer.js",[],[],"/Users/laia/Desktop/projects-github/create-notes/src/components/createYourNote/Aside.js",[],[],"/Users/laia/Desktop/projects-github/create-notes/src/components/createYourNote/PostedNote.js",[],[],"/Users/laia/Desktop/projects-github/create-notes/src/components/dashboardNotes/NoteList.js",[],[],"/Users/laia/Desktop/projects-github/create-notes/src/components/dashboardNotes/NoteItem.js",["53"],[],"import { useState } from \"react\";\nimport \"../../styles/layouts/NoteItem.scss\";\n\nconst NoteItem = ({\n  newNote,\n  allCategory,\n  index,\n  id,\n  title,\n  content,\n  categoryTheme,\n  handleDeleteNote,\n  handleEditNote,\n}) => {\n  const handleToDeleteNote = () => {\n    handleDeleteNote(index);\n  };\n\n  const handleToEditNote = () => {\n    handleEditNote(index);\n  };\n\n  const noteCategoryTheme = allCategory.find(\n    eachCategoryTheme => eachCategoryTheme.name === categoryTheme\n  );\n\n  return (\n    <li\n      className={`note__item ${\n        newNote.title.length !== 0 || newNote.content.length !== 0\n          ? \"unactive\"\n          : \"active\"\n      }`}>\n      <div\n        className=\"note__item__container\"\n        style={{ background: noteCategoryTheme.color }}>\n        <div className=\"note__item__container__text\">\n          <small>#{categoryTheme}</small>\n          <h2>\n            {id}.- {title}\n          </h2>\n          <p>{content}</p>\n        </div>\n        <span></span>\n        <div className=\"note__item__container__div\">\n          <i\n            className=\"fas fa-pencil-alt\"\n            index={index}\n            onClick={handleToEditNote}></i>\n          <i\n            className=\"fas fa-eraser\"\n            index={index}\n            onClick={handleToDeleteNote}></i>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default NoteItem;\n",{"ruleId":"54","severity":1,"message":"55","line":10,"column":23,"nodeType":"56","messageId":"57","endLine":10,"endColumn":37},{"ruleId":"54","severity":1,"message":"58","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":18},"no-unused-vars","'setAllCategory' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used."]